from flask import Flask, render_template, request
import openai
from markupsafe import Markup
import os
from dotenv import load_dotenv

# Charger les variables d'environnement
load_dotenv()

# V√©rification de la cl√© API
openai_api_key = os.getenv("OPENAI_API_KEY")
if not openai_api_key:
    print("‚ö†Ô∏è Erreur : Aucune cl√© API OpenAI d√©tect√©e. V√©rifiez votre fichier .env")
openai.api_key = openai_api_key

app = Flask(__name__)

# Fonction pour g√©n√©rer des images avec DALL-E
def generate_image(description):
    # Exemple avec l'API DALL-E pour g√©n√©rer une image
    response = openai.Image.create(
        prompt=description,
        n=1,
        size="1024x1024"
    )
    # R√©cup√©ration de l'URL de l'image g√©n√©r√©e
    image_url = response['data'][0]['url']
    return image_url

# Page d'accueil
@app.route("/")
def index():
    return render_template("index.html")

# Route pour poser la question √† GPT-4
@app.route("/ask_gpt", methods=["POST"])
def ask_gpt():
    user_question = request.form["question"]

    # D√©finition du prompt pour GPT-4
    system_prompt = (
        "Tu es un expert en √©lectromagn√©tisme DIY, √©lectricit√© et bricolage. "
        "Ce projet a √©t√© con√ßu par **Trhacknon** pour aider les jeunes √† fabriquer un √©lectro-aimant ejecteur de clou "
        "avec des mat√©riaux accessibles.\n\n"
        "‚ö†Ô∏è **Tu dois r√©pondre en HTML pur, sans √©chappement de balises**.\n"
        "Utilise les balises `<p>`, `<h1>`, `<h2>`, `<table>`, `<tr>`, `<td>`, `<ul>`, `<li>` et `<strong>` pour structurer ta r√©ponse.\n\n"
        "=== **EXEMPLE DE FORMAT** ===\n\n"
        "<h2>1. Introduction</h2>\n"
        "<p>Ce projet explique comment fabriquer un √©lectro-aimant capable d'√©jecter un clou...</p>\n\n"
        "<h2>2. Mat√©riel n√©cessaire</h2>\n"
        "<table>\n"
        "<tr><th>Nom</th><th>O√π le trouver</th><th>Prix approximatif</th></tr>\n"
        "<tr><td>Fil de cuivre √©maill√©</td><td>Magasin √©lectronique / r√©cup</td><td>5-10‚Ç¨</td></tr>\n"
        "<tr><td>Clou en acier doux</td><td>Quincaillerie / r√©cup</td><td>1‚Ç¨</td></tr>\n"
        "<tr><td>Alimentation 9V</td><td>Magasin tech / r√©cup</td><td>2-5‚Ç¨</td></tr>\n"
        "</table>\n\n"
        "<h2>3. √âtapes de fabrication</h2>\n"
        "<h3>üõ†Ô∏è Pr√©paration</h3>\n"
        "<ul>\n"
        "<li>Coupez <strong>50 cm de fil</strong> et enlevez l'isolation aux extr√©mit√©s.</li>\n"
        "<li>Enroulez <strong>100 tours</strong> autour du tube plastique.</li>\n"
        "</ul>\n\n"
        "<h3>‚öôÔ∏è Branchement</h3>\n"
        "<ul>\n"
        "<li>Connectez un fil √† l'interrupteur et l'autre √† la batterie.</li>\n"
        "<li>Placez le clou au centre et activez l'interrupteur.</li>\n"
        "</ul>\n\n"
        "<h3>‚ú® Op√©ration</h3>\n"
        "<ul>\n"
        "<li>Activez l'interrupteur pour g√©n√©rer le champ √©lectromagn√©tique qui √©jecte le clou.</li>\n"
        "</ul>\n\n"
        "<h2>4. Conseils et astuces</h2>\n"
        "<ul>\n"
        "<li>Plus de <strong>tours</strong> = plus de puissance.</li>\n"
        "<li>Exp√©rimente avec <strong>diff√©rentes tensions (5V, 9V, 12V)</strong> pour varier la puissance.</li>\n"
        "</ul>\n\n"
        "<h2>5. Avertissements de s√©curit√©</h2>\n"
        "<ul>\n"
        "<li>‚ö†Ô∏è <strong>Ne pas d√©passer 12V</strong> pour √©viter la surchauffe.</li>\n"
        "<li><strong>Ne jamais toucher les fils d√©nud√©s</strong> sous tension.</li>\n"
        "</ul>\n\n"
        "<h2>6. Mention Trhacknon</h2>\n"
        "<p>Ce projet est d√©velopp√© par <strong>Trhacknon</strong> pour la communaut√© DIY et hacker.</p>\n"
    )

    # Envoi de la question √† GPT-4
    response = openai.ChatCompletion.create(
        model="gpt-4",
        messages=[
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": user_question}
        ]
    )

    # R√©cup√©ration de la r√©ponse en HTML
    answer_html = response["choices"][0]["message"]["content"]

    # G√©n√©rer une image pour accompagner le tutoriel
    image_description = """
    An electromagnet project in action. A close-up of a copper wire wound around a plastic tube, powered by a 9V battery. A steel nail is being forcefully ejected from the center of the coil due to the magnetic field. The copper wire is shiny and clearly visible, wrapped tightly around the plastic tube, and the electric connections are visible, with sparks showing the flow of electricity. The image should have a dynamic feeling, with motion blur on the nail to emphasize its rapid ejection. The background is simple and technical, focusing on the electromagnet components like the battery, copper wire, and the nail in motion. The setting should look like a DIY workshop, with tools and materials around but in a minimalistic way. The image should evoke a sense of DIY and hands-on experimentation, with a clear emphasis on the working mechanism of the electromagnet.
    """
    image_url = generate_image(image_description)

    # Ajouter l'image dans le contenu HTML
    image_html = f'<img src="{image_url}" alt="Sch√©ma du montage √©lectro-aimant" style="width:100%; max-width:600px; margin:20px 0;">'
    answer_html += image_html

    # Retourner la r√©ponse dans la page HTML
    return render_template("index.html", response=Markup(answer_html))

if __name__ == "__main__":
    app.run(debug=False, host="0.0.0.0")
